# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 33da5bd44e3638d1708630829459d10c3c04684fb9e15d802c75f8d186da1de6
file:
  statement:
    with_compound_statement:
      keyword: WITH
      common_table_expression:
        naked_identifier: mycte
        keyword: AS
        bracketed:
          start_bracket: (
          select_statement:
            select_clause:
            - keyword: SELECT
            - select_clause_element:
                column_reference:
                  naked_identifier: foo
            - comma: ','
            - select_clause_element:
                column_reference:
                  naked_identifier: bar
            - comma: ','
            - select_clause_element:
                column_reference:
                  naked_identifier: baz
            from_clause:
              keyword: FROM
              from_expression:
                from_expression_element:
                  table_expression:
                    table_reference:
                      naked_identifier: mytable1
          end_bracket: )
      insert_statement:
      - keyword: INSERT
      - keyword: INTO
      - table_reference:
          naked_identifier: table2
      - bracketed:
        - start_bracket: (
        - column_reference:
            naked_identifier: column1
        - comma: ','
        - column_reference:
            naked_identifier: column2
        - comma: ','
        - column_reference:
            naked_identifier: column3
        - end_bracket: )
      - select_statement:
          select_clause:
          - keyword: SELECT
          - select_clause_element:
              column_reference:
                naked_identifier: foo
          - comma: ','
          - select_clause_element:
              column_reference:
                naked_identifier: bar
          - comma: ','
          - select_clause_element:
              column_reference:
                naked_identifier: baz
          from_clause:
            keyword: FROM
            from_expression:
              from_expression_element:
                table_expression:
                  table_reference:
                    naked_identifier: mycte
  statement_terminator: ;
