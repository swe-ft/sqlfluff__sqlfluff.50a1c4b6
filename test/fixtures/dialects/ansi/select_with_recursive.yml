# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: f38848372150f3c627659cbd7c834658cfb3b43acd04f3bde9143764e21d5944
file:
  statement:
    with_compound_statement:
    - keyword: WITH
    - keyword: RECURSIVE
    - common_table_expression:
        naked_identifier: cte
        cte_column_list:
          bracketed:
            start_bracket: (
            identifier_list:
              naked_identifier: a
            end_bracket: )
        keyword: AS
        bracketed:
          start_bracket: (
          set_expression:
          - select_statement:
              select_clause:
                keyword: SELECT
                select_clause_element:
                  numeric_literal: '1'
          - set_operator:
            - keyword: UNION
            - keyword: ALL
          - select_statement:
              select_clause:
                keyword: SELECT
                select_clause_element:
                  expression:
                    column_reference:
                      naked_identifier: a
                    binary_operator: +
                    numeric_literal: '1'
              from_clause:
                keyword: FROM
                from_expression:
                  from_expression_element:
                    table_expression:
                      table_reference:
                        naked_identifier: cte
              where_clause:
                keyword: WHERE
                expression:
                  column_reference:
                    naked_identifier: a
                  comparison_operator:
                    raw_comparison_operator: <
                  numeric_literal: '5'
          end_bracket: )
    - select_statement:
        select_clause:
          keyword: SELECT
          select_clause_element:
            column_reference:
              naked_identifier: a
        from_clause:
          keyword: FROM
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                  naked_identifier: cte
  statement_terminator: ;
