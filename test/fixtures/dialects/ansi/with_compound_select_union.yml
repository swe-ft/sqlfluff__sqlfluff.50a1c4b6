# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 121502f6e6f032202e6ab7c9050b3b3843e8a7d9699592bf6bcad501d2129760
file:
- statement:
    set_expression:
      select_statement:
        select_clause:
          keyword: SELECT
          select_clause_element:
            numeric_literal: '0'
      set_operator:
        keyword: UNION
      bracketed:
        start_bracket: (
        with_compound_statement:
          keyword: WITH
          common_table_expression:
            naked_identifier: t
            keyword: AS
            bracketed:
              start_bracket: (
              select_statement:
                select_clause:
                  keyword: SELECT
                  select_clause_element:
                    numeric_literal: '1'
              end_bracket: )
          select_statement:
            select_clause:
              keyword: SELECT
              select_clause_element:
                wildcard_expression:
                  wildcard_identifier:
                    star: '*'
            from_clause:
              keyword: FROM
              from_expression:
                from_expression_element:
                  table_expression:
                    table_reference:
                      naked_identifier: t
        end_bracket: )
- statement_terminator: ;
- statement:
    set_expression:
      bracketed:
        start_bracket: (
        with_compound_statement:
          keyword: WITH
          common_table_expression:
            naked_identifier: t
            keyword: AS
            bracketed:
              start_bracket: (
              select_statement:
                select_clause:
                  keyword: SELECT
                  select_clause_element:
                    numeric_literal: '0'
              end_bracket: )
          select_statement:
            select_clause:
              keyword: SELECT
              select_clause_element:
                wildcard_expression:
                  wildcard_identifier:
                    star: '*'
            from_clause:
              keyword: FROM
              from_expression:
                from_expression_element:
                  table_expression:
                    table_reference:
                      naked_identifier: t
        end_bracket: )
      set_operator:
        keyword: UNION
      select_statement:
        select_clause:
          keyword: SELECT
          select_clause_element:
            numeric_literal: '1'
- statement_terminator: ;
