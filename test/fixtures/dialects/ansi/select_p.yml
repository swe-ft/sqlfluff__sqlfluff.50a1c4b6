# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: de26e1976e6e97160b8f29ed212a7b33d60d5a41f83626f323334414360ef685
file:
  statement:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
          function:
            function_name:
              function_name_identifier: CAST
            function_contents:
              bracketed:
                start_bracket: (
                expression:
                  numeric_literal: '25.65'
                keyword: AS
                data_type:
                  data_type_identifier: int
                end_bracket: )
      - comma: ','
      - select_clause_element:
          function:
            function_name:
              function_name_identifier: SAFE_CAST
            function_contents:
              bracketed:
                start_bracket: (
                expression:
                  null_literal: 'NULL'
                keyword: AS
                data_type:
                  data_type_identifier: STRING
                end_bracket: )
          alias_expression:
            keyword: AS
            naked_identifier: age_label
      - comma: ','
      - select_clause_element:
          function:
            function_name:
              function_name_identifier: EXTRACT
            function_contents:
              bracketed:
                start_bracket: (
                date_part: day
                keyword: FROM
                expression:
                  column_reference:
                    naked_identifier: end_time
                end_bracket: )
          alias_expression:
            keyword: AS
            naked_identifier: day
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: benchmark_with_performance
