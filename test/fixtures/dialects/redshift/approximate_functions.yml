# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 99c58441cd45d86be2cfaed552cbe8bfacaa56086500955319aec6d3c2ca9214
file:
- statement:
    select_statement:
      select_clause:
      - keyword: select
      - select_clause_modifier:
          keyword: top
          numeric_literal: '10'
      - select_clause_element:
          column_reference:
          - naked_identifier: date
          - dot: .
          - naked_identifier: caldate
      - comma: ','
      - select_clause_element:
          function:
            function_name:
              function_name_identifier: count
            function_contents:
              bracketed:
                start_bracket: (
                expression:
                  column_reference:
                    naked_identifier: totalprice
                end_bracket: )
      - comma: ','
      - select_clause_element:
          function:
            function_name:
              function_name_identifier: sum
            function_contents:
              bracketed:
                start_bracket: (
                expression:
                  column_reference:
                    naked_identifier: totalprice
                end_bracket: )
      - comma: ','
      - select_clause_element:
          function:
            keyword: approximate
            function_name:
              function_name_identifier: percentile_disc
            function_contents:
              bracketed:
                start_bracket: (
                expression:
                  numeric_literal: '0.5'
                end_bracket: )
            withingroup_clause:
            - keyword: within
            - keyword: group
            - bracketed:
                start_bracket: (
                orderby_clause:
                - keyword: order
                - keyword: by
                - column_reference:
                    naked_identifier: totalprice
                end_bracket: )
      from_clause:
        keyword: from
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: listing
          join_clause:
            keyword: join
            from_expression_element:
              table_expression:
                table_reference:
                  naked_identifier: date
            join_on_condition:
              keyword: 'on'
              expression:
              - column_reference:
                - naked_identifier: listing
                - dot: .
                - naked_identifier: dateid
              - comparison_operator:
                  raw_comparison_operator: '='
              - column_reference:
                - naked_identifier: date
                - dot: .
                - naked_identifier: dateid
      groupby_clause:
      - keyword: group
      - keyword: by
      - column_reference:
        - naked_identifier: date
        - dot: .
        - naked_identifier: caldate
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: select
        select_clause_element:
          function:
            keyword: approximate
            function_name:
              function_name_identifier: count
            function_contents:
              bracketed:
                start_bracket: (
                keyword: distinct
                expression:
                  column_reference:
                    naked_identifier: pricepaid
                end_bracket: )
      from_clause:
        keyword: from
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: sales
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: select
        select_clause_element:
          function:
            function_name:
              function_name_identifier: count
            function_contents:
              bracketed:
                start_bracket: (
                keyword: distinct
                expression:
                  column_reference:
                    naked_identifier: pricepaid
                end_bracket: )
      from_clause:
        keyword: from
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: sales
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: select
        select_clause_element:
          function:
            function_name:
              function_name_identifier: approximate
            function_contents:
              bracketed:
                start_bracket: (
                expression:
                  column_reference:
                    naked_identifier: foo
                end_bracket: )
      from_clause:
        keyword: from
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: bar
- statement_terminator: ;
