# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 1d2660a2bcd5b736992a943afc9ba187718d7cd51060b990e25549a8bdd4cf22
file:
  batch:
    statement:
      select_statement:
        select_clause:
        - keyword: SELECT
        - select_clause_element:
            function:
              function_name:
                function_name_identifier: DATETRUNC
              function_contents:
                bracketed:
                  start_bracket: (
                  date_part: YEAR
                  comma: ','
                  expression:
                    column_reference:
                    - naked_identifier: my_table
                    - dot: .
                    - naked_identifier: date
                  end_bracket: )
            alias_expression:
              keyword: AS
              quoted_identifier: '[beginningOfYear]'
        - comma: ','
        - select_clause_element:
            function:
              function_name:
                function_name_identifier: DATETRUNC
              function_contents:
                bracketed:
                  start_bracket: (
                  date_part: MONTH
                  comma: ','
                  expression:
                    column_reference:
                    - naked_identifier: my_table
                    - dot: .
                    - naked_identifier: date
                  end_bracket: )
            alias_expression:
              keyword: AS
              quoted_identifier: '[FirstOfMonth]'
        - comma: ','
        - select_clause_element:
            function:
              function_name:
                function_name_identifier: DATETRUNC
              function_contents:
                bracketed:
                  start_bracket: (
                  date_part: DAY
                  comma: ','
                  expression:
                    column_reference:
                    - naked_identifier: my_table
                    - dot: .
                    - naked_identifier: date
                  end_bracket: )
            alias_expression:
              keyword: AS
              quoted_identifier: '[Today]'
        from_clause:
          keyword: FROM
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                  naked_identifier: my_table
          statement_terminator: ;
