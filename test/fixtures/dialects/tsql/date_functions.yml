# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 2a4f739cede4bf7b05e7defc0d31711e13b92c9af7dac97e971ae7d9f292cba8
file:
  batch:
    statement:
      select_statement:
        select_clause:
          keyword: select
          select_clause_element:
            function:
              function_name:
                keyword: convert
              function_contents:
                bracketed:
                  start_bracket: (
                  data_type:
                    data_type_identifier: date
                  comma: ','
                  expression:
                    function:
                      function_name:
                        function_name_identifier: dateadd
                      function_contents:
                        bracketed:
                        - start_bracket: (
                        - date_part: month
                        - comma: ','
                        - expression:
                            function:
                              function_name:
                                function_name_identifier: datediff
                              function_contents:
                                bracketed:
                                - start_bracket: (
                                - date_part: month
                                - comma: ','
                                - expression:
                                    numeric_literal: '0'
                                - comma: ','
                                - expression:
                                    column_reference:
                                    - naked_identifier: t
                                    - dot: .
                                    - naked_identifier: valid_from_date
                                - end_bracket: )
                        - comma: ','
                        - expression:
                            numeric_literal: '0'
                        - end_bracket: )
                  end_bracket: )
            alias_expression:
              keyword: as
              naked_identifier: valid_from_date
        from_clause:
          keyword: from
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                  naked_identifier: t
              alias_expression:
                keyword: as
                naked_identifier: t
        where_clause:
          keyword: where
          expression:
            column_reference:
            - naked_identifier: t
            - dot: .
            - naked_identifier: activity_month
            comparison_operator:
            - raw_comparison_operator: '>'
            - raw_comparison_operator: '='
            function:
              function_name:
                keyword: convert
              function_contents:
                bracketed:
                  start_bracket: (
                  data_type:
                    data_type_identifier: date
                  comma: ','
                  expression:
                    function:
                      function_name:
                        function_name_identifier: dateadd
                      function_contents:
                        bracketed:
                        - start_bracket: (
                        - date_part: yy
                        - comma: ','
                        - expression:
                            function:
                              function_name:
                                function_name_identifier: datediff
                              function_contents:
                                bracketed:
                                - start_bracket: (
                                - date_part: yy
                                - comma: ','
                                - expression:
                                    numeric_literal: '0'
                                - comma: ','
                                - expression:
                                    function:
                                      function_name:
                                        function_name_identifier: getdate
                                      function_contents:
                                        bracketed:
                                          start_bracket: (
                                          end_bracket: )
                                - end_bracket: )
                            binary_operator: '-'
                            numeric_literal: '1'
                        - comma: ','
                        - expression:
                            numeric_literal: '0'
                        - end_bracket: )
                  end_bracket: )
