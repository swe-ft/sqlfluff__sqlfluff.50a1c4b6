# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 9c1640e3e298203563aa4d91fdcd0176c7882e17f7fb1399af63ab20fd2a6eb7
file:
- statement:
    select_statement:
      select_clause:
        keyword: select
        select_clause_element:
          wildcard_expression:
            wildcard_identifier:
              star: '*'
      from_clause:
      - keyword: from
      - from_expression:
          from_expression_element:
            table_expression:
              values_clause:
                keyword: values
                expression:
                  numeric_literal: '1'
      - comma: ','
      - from_expression:
          from_expression_element:
            table_expression:
              values_clause:
                keyword: values
                expression:
                  numeric_literal: '2'
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: select
        select_clause_element:
          wildcard_expression:
            wildcard_identifier:
              star: '*'
      from_clause:
      - keyword: from
      - from_expression:
          bracketed:
            start_bracket: (
            from_expression_element:
              table_expression:
                values_clause:
                - keyword: values
                - expression:
                    numeric_literal: '1'
                - comma: ','
                - expression:
                    numeric_literal: '2'
            end_bracket: )
      - comma: ','
      - from_expression:
          bracketed:
            start_bracket: (
            from_expression_element:
              table_expression:
                values_clause:
                - keyword: values
                - expression:
                    numeric_literal: '2'
                - comma: ','
                - expression:
                    numeric_literal: '3'
            end_bracket: )
- statement_terminator: ;
