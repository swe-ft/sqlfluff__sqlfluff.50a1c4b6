# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 516cef0da1bbf73ae5433a2dec8e006462393e2584381862fbd24ed704308d65
file:
- statement:
    call_statement:
      keyword: CALL
      function:
        function_name:
          function_name_identifier: do_db_maintenance
        function_contents:
          bracketed:
            start_bracket: (
            end_bracket: )
- statement_terminator: ;
- statement:
    call_statement:
      keyword: CALL
      function:
        function_name:
          naked_identifier: my_schema
          dot: .
          function_name_identifier: do_db_maintenance
        function_contents:
          bracketed:
            start_bracket: (
            end_bracket: )
- statement_terminator: ;
- statement:
    call_statement:
      keyword: call
      function:
        function_name:
          function_name_identifier: procedure_name
        function_contents:
          bracketed:
            start_bracket: (
            end_bracket: )
- statement_terminator: ;
- statement:
    call_statement:
      keyword: call
      function:
        function_name:
          function_name_identifier: procedure_name
        function_contents:
          bracketed:
          - start_bracket: (
          - expression:
              quoted_literal: "'param1'"
          - comma: ','
          - expression:
              numeric_literal: '123'
          - end_bracket: )
- statement_terminator: ;
- statement:
    call_statement:
      keyword: call
      function:
        function_name:
          naked_identifier: schema
          dot: .
          function_name_identifier: procedure_name
        function_contents:
          bracketed:
            start_bracket: (
            end_bracket: )
- statement_terminator: ;
- statement:
    call_statement:
      keyword: call
      function:
        function_name:
          naked_identifier: schema
          dot: .
          function_name_identifier: procedure_name
        function_contents:
          bracketed:
          - start_bracket: (
          - expression:
              quoted_literal: "'param1'"
          - comma: ','
          - expression:
              numeric_literal: '123'
          - end_bracket: )
- statement_terminator: ;
