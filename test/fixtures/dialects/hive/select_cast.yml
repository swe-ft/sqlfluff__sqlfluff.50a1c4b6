# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 31d077932bb174b9ba3e9986901e0bb73478f84da92f761da6a2c3b8e10bb794
file:
- statement:
    select_statement:
      select_clause:
        keyword: select
        select_clause_element:
          function:
            function_name:
              function_name_identifier: cast
            function_contents:
              bracketed:
                start_bracket: (
                expression:
                  function:
                  - function_name: row
                  - function_contents:
                      bracketed:
                      - start_bracket: (
                      - column_reference:
                          naked_identifier: col1
                      - comma: ','
                      - column_reference:
                          naked_identifier: col2
                      - end_bracket: )
                  - keyword: as
                  - keyword: row
                  - bracketed:
                    - start_bracket: (
                    - naked_identifier: a
                    - data_type:
                        primitive_type:
                          keyword: bigint
                    - comma: ','
                    - naked_identifier: b
                    - data_type:
                        primitive_type:
                          keyword: decimal
                          bracketed_arguments:
                            bracketed:
                            - start_bracket: (
                            - numeric_literal: '23'
                            - comma: ','
                            - numeric_literal: '2'
                            - end_bracket: )
                    - end_bracket: )
                end_bracket: )
      from_clause:
        keyword: from
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
              - naked_identifier: sch
              - dot: .
              - naked_identifier: tbl
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: select
        select_clause_element:
          function:
            function_name:
              function_name_identifier: cast
            function_contents:
              bracketed:
                start_bracket: (
                expression:
                  column_reference:
                    naked_identifier: a
                keyword: as
                data_type:
                  primitive_type:
                    keyword: json
                end_bracket: )
      from_clause:
        keyword: from
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
              - naked_identifier: sch
              - dot: .
              - naked_identifier: tbl
- statement_terminator: ;
