# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 1bcf5446534430f11ec43cb6a85a68e107edf91b48b933777b3e640b901ed642
file:
  statement:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
          function:
            function_name:
              function_name_identifier: TIMESTAMP_TRUNC
            function_contents:
              bracketed:
                start_bracket: (
                expression:
                  function:
                    function_name:
                      function_name_identifier: TIMESTAMP_ADD
                    function_contents:
                      bracketed:
                      - start_bracket: (
                      - expression:
                          column_reference:
                          - naked_identifier: session_start
                          - dot: .
                          - naked_identifier: eventTimestamp
                      - comma: ','
                      - expression:
                          interval_expression:
                            keyword: INTERVAL
                            expression:
                              function:
                                function_name:
                                  function_name_identifier: cast
                                function_contents:
                                  bracketed:
                                    start_bracket: (
                                    expression:
                                      function:
                                        function_name:
                                          function_name_identifier: TIMESTAMP_DIFF
                                        function_contents:
                                          bracketed:
                                          - start_bracket: (
                                          - expression:
                                              column_reference:
                                              - naked_identifier: session_end
                                              - dot: .
                                              - naked_identifier: eventTimestamp
                                          - comma: ','
                                          - expression:
                                              column_reference:
                                              - naked_identifier: session_start
                                              - dot: .
                                              - naked_identifier: eventTimestamp
                                          - comma: ','
                                          - date_part: SECOND
                                          - end_bracket: )
                                      binary_operator: /
                                      numeric_literal: '2'
                                    keyword: AS
                                    data_type:
                                      data_type_identifier: int64
                                    end_bracket: )
                            date_part: second
                      - end_bracket: )
                comma: ','
                date_part: HOUR
                end_bracket: )
          alias_expression:
            keyword: AS
            naked_identifier: avgAtHour
      - comma: ','
      - select_clause_element:
          function:
            function_name:
              function_name_identifier: TIME_ADD
            function_contents:
              bracketed:
              - start_bracket: (
              - expression:
                  column_reference:
                    naked_identifier: time1
              - comma: ','
              - expression:
                  interval_expression:
                    keyword: INTERVAL
                    expression:
                      numeric_literal: '10'
                    date_part: MINUTE
              - end_bracket: )
          alias_expression:
            keyword: AS
            naked_identifier: after
      - comma: ','
      - select_clause_element:
          function:
            function_name:
              function_name_identifier: DATE_SUB
            function_contents:
              bracketed:
              - start_bracket: (
              - expression:
                  column_reference:
                    naked_identifier: time2
              - comma: ','
              - expression:
                  interval_expression:
                    keyword: INTERVAL
                    expression:
                      numeric_literal: '5'
                    date_part: YEAR
              - end_bracket: )
          alias_expression:
            keyword: AS
            naked_identifier: before
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: dummy
  statement_terminator: ;
