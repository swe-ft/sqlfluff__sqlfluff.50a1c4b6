# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: d9d047907d529440ecdc5b92785147d403b3794fbcd9aa70429c9659807177a8
file:
- statement:
    create_projection_statement:
    - keyword: CREATE
    - keyword: PROJECTION
    - table_reference:
      - naked_identifier: public
      - dot: .
      - naked_identifier: employee_dimension_super
    - keyword: AS
    - select_statement:
        select_clause:
          keyword: SELECT
          select_clause_element:
            wildcard_expression:
              wildcard_identifier:
                star: '*'
        from_clause:
          keyword: FROM
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                - naked_identifier: public
                - dot: .
                - naked_identifier: employee_dimension
    - orderby_clause:
      - keyword: ORDER
      - keyword: BY
      - column_reference:
          naked_identifier: employee_key
    - segmentedby_clause:
      - keyword: SEGMENTED
      - keyword: BY
      - function:
          function_name:
            function_name_identifier: hash
          function_contents:
            bracketed:
              start_bracket: (
              expression:
                column_reference:
                  naked_identifier: employee_key
              end_bracket: )
      - keyword: ALL
      - keyword: NODES
- statement_terminator: ;
- statement:
    create_projection_statement:
    - keyword: CREATE
    - keyword: PROJECTION
    - table_reference:
      - naked_identifier: store
      - dot: .
      - naked_identifier: store_dimension_proj
    - bracketed:
      - start_bracket: (
      - column_reference:
          naked_identifier: storekey
      - comma: ','
      - column_reference:
          naked_identifier: name
      - comma: ','
      - column_reference:
          naked_identifier: city
      - comma: ','
      - column_reference:
          naked_identifier: state
      - end_bracket: )
    - keyword: AS
    - select_statement:
        select_clause:
        - keyword: SELECT
        - select_clause_element:
            column_reference:
              naked_identifier: store_key
        - comma: ','
        - select_clause_element:
            column_reference:
              naked_identifier: store_name
        - comma: ','
        - select_clause_element:
            column_reference:
              naked_identifier: store_city
        - comma: ','
        - select_clause_element:
            column_reference:
              naked_identifier: store_state
        from_clause:
          keyword: FROM
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                - naked_identifier: store
                - dot: .
                - naked_identifier: store_dimension
    - segmentedby_clause:
      - keyword: UNSEGMENTED
      - keyword: ALL
      - keyword: NODES
- statement_terminator: ;
