# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: aa7138fe0757fd77b284c8d6b28fa0a4db39b8eda0686953b3b6b5ecad288a5c
file:
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TABLE
    - table_reference:
      - naked_identifier: public
      - dot: .
      - naked_identifier: Premium_Customer
    - bracketed:
      - start_bracket: (
      - column_reference:
          naked_identifier: ID
      - data_type:
          data_type_identifier: IDENTITY
      - comma: ','
      - column_reference:
          naked_identifier: lname
      - data_type:
          keyword: varchar
          bracketed_arguments:
            bracketed:
              start_bracket: (
              numeric_literal: '25'
              end_bracket: )
      - comma: ','
      - column_reference:
          naked_identifier: fname
      - data_type:
          keyword: varchar
          bracketed_arguments:
            bracketed:
              start_bracket: (
              numeric_literal: '25'
              end_bracket: )
      - comma: ','
      - column_reference:
          naked_identifier: store_membership_card
      - data_type:
          keyword: int
      - end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TABLE
    - table_reference:
        naked_identifier: orders
    - bracketed:
      - start_bracket: (
      - column_reference:
          naked_identifier: orderkey
      - data_type:
          keyword: INT
      - column_encoding:
          keyword: ENCODING
          encoding_type: AUTO
      - comma: ','
      - column_reference:
          naked_identifier: custkey
      - data_type:
          keyword: INT
      - comma: ','
      - column_reference:
          naked_identifier: prodkey
      - data_type:
          array_type:
            keyword: ARRAY
            start_square_bracket: '['
            data_type:
              keyword: VARCHAR
              bracketed_arguments:
                bracketed:
                  start_bracket: (
                  numeric_literal: '10'
                  end_bracket: )
            end_square_bracket: ']'
      - comma: ','
      - column_reference:
          naked_identifier: orderprices
      - data_type:
          array_type:
            keyword: ARRAY
            start_square_bracket: '['
            data_type:
              keyword: DECIMAL
              bracketed_arguments:
                bracketed:
                - start_bracket: (
                - numeric_literal: '12'
                - comma: ','
                - numeric_literal: '2'
                - end_bracket: )
            end_square_bracket: ']'
      - comma: ','
      - column_reference:
          naked_identifier: orderdate
      - data_type:
          keyword: DATE
      - end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TABLE
    - table_reference:
        naked_identifier: orders
    - bracketed:
      - start_bracket: (
      - column_reference:
          naked_identifier: orderkey
      - data_type:
          keyword: INT
      - column_encoding:
          keyword: ENCODING
          encoding_type: AUTO
      - comma: ','
      - column_reference:
          naked_identifier: custkey
      - data_type:
          keyword: INT
      - comma: ','
      - column_reference:
          naked_identifier: prodkey
      - data_type:
          array_type:
            keyword: ARRAY
            start_square_bracket: '['
            data_type:
              keyword: VARCHAR
              bracketed_arguments:
                bracketed:
                  start_bracket: (
                  numeric_literal: '10'
                  end_bracket: )
            end_square_bracket: ']'
      - comma: ','
      - column_reference:
          naked_identifier: orderprices
      - data_type:
          array_type:
            keyword: ARRAY
            start_square_bracket: '['
            data_type:
              keyword: DECIMAL
              bracketed_arguments:
                bracketed:
                - start_bracket: (
                - numeric_literal: '12'
                - comma: ','
                - numeric_literal: '2'
                - end_bracket: )
            end_square_bracket: ']'
      - comma: ','
      - column_reference:
          naked_identifier: orderdate
      - data_type:
          keyword: DATE
      - end_bracket: )
    - partitionby_clause:
      - keyword: partition
      - keyword: by
      - expression:
          cast_expression:
            column_reference:
              naked_identifier: orderdate
            casting_operator: '::'
            data_type:
              keyword: date
      - groupby_clause:
        - keyword: group
        - keyword: by
        - expression:
            function:
              function_name:
                function_name_identifier: CALENDAR_HIERARCHY_DAY
              function_contents:
                bracketed:
                - start_bracket: (
                - expression:
                    cast_expression:
                      column_reference:
                        naked_identifier: orderdate
                      casting_operator: '::'
                      data_type:
                        keyword: DATE
                - comma: ','
                - expression:
                    numeric_literal: '3'
                - comma: ','
                - expression:
                    numeric_literal: '2'
                - end_bracket: )
      - keyword: REORGANIZE
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TEMPORARY
    - keyword: TABLE
    - table_reference:
        naked_identifier: tempDelete
    - bracketed:
      - start_bracket: (
      - column_reference:
          naked_identifier: a
      - data_type:
          keyword: int
      - comma: ','
      - column_reference:
          naked_identifier: b
      - data_type:
          keyword: int
      - end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TEMPORARY
    - keyword: TABLE
    - table_reference:
        naked_identifier: tempPreserve
    - bracketed:
      - start_bracket: (
      - column_reference:
          naked_identifier: a
      - data_type:
          keyword: int
      - comma: ','
      - column_reference:
          naked_identifier: b
      - data_type:
          keyword: int
      - end_bracket: )
    - keyword: 'ON'
    - keyword: COMMIT
    - keyword: PRESERVE
    - keyword: ROWS
- statement_terminator: ;
