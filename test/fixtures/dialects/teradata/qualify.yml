# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 0484ae2cd5544435691f74d092fcecae32d0ec0d80c6e67b7d571402c3d455be
file:
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          column_reference:
            naked_identifier: id
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: mytable
      qualify_clause:
        keyword: qualify
        expression:
          column_reference:
            naked_identifier: x
          comparison_operator:
            raw_comparison_operator: '='
          numeric_literal: '1'
- statement_terminator: ;
- statement:
    set_expression:
    - select_statement:
        select_clause:
          keyword: SELECT
          select_clause_element:
            column_reference:
              naked_identifier: id
        from_clause:
          keyword: FROM
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                  naked_identifier: mytable
        qualify_clause:
          keyword: qualify
          expression:
            column_reference:
              naked_identifier: x
            comparison_operator:
              raw_comparison_operator: '='
            numeric_literal: '1'
    - set_operator:
      - keyword: UNION
      - keyword: ALL
    - select_statement:
        select_clause:
          keyword: SELECT
          select_clause_element:
            column_reference:
              naked_identifier: id
        from_clause:
          keyword: FROM
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                  naked_identifier: mytable
        qualify_clause:
          keyword: qualify
          expression:
            column_reference:
              naked_identifier: x
            comparison_operator:
              raw_comparison_operator: '='
            numeric_literal: '1'
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          column_reference:
            naked_identifier: id
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: mytable
      qualify_clause:
        keyword: qualify
        expression:
          function:
            function_name:
              function_name_identifier: count
            function_contents:
              bracketed:
                start_bracket: (
                star: '*'
                end_bracket: )
            over_clause:
              keyword: over
              bracketed:
                start_bracket: (
                window_specification:
                  partitionby_clause:
                  - keyword: partition
                  - keyword: by
                  - expression:
                      column_reference:
                        naked_identifier: id
                end_bracket: )
          comparison_operator:
            raw_comparison_operator: '>'
          numeric_literal: '1'
- statement_terminator: ;
