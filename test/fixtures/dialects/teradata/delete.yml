# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: ee1c9bd2be40a1b3b1133e4b1c0e9a569b519ffe26d5ba228c80511b0bfb214a
file:
- statement:
    delete_statement:
      keyword: DELETE
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: MY_TABLE
      where_clause:
        keyword: WHERE
        expression:
        - numeric_literal: '1'
        - comparison_operator:
            raw_comparison_operator: '='
        - numeric_literal: '1'
- statement_terminator: ;
- statement:
    delete_statement:
      keyword: DELETE
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: MY_TABLE
      where_clause:
        keyword: WHERE
        expression:
          column_reference:
            naked_identifier: MY_COL
          comparison_operator:
            raw_comparison_operator: '>'
          numeric_literal: '10'
- statement_terminator: ;
- statement:
    delete_statement:
      keyword: DELETE
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: MY_TABLE
      where_clause:
        keyword: WHERE
        expression:
        - column_reference:
            naked_identifier: ID
        - keyword: IN
        - bracketed:
            start_bracket: (
            select_statement:
              select_clause:
                keyword: SELECT
                select_clause_element:
                  column_reference:
                    naked_identifier: ID
              from_clause:
                keyword: FROM
                from_expression:
                  from_expression_element:
                    table_expression:
                      table_reference:
                        naked_identifier: ANOTHER_TABLE
            end_bracket: )
        - binary_operator: AND
        - column_reference:
            naked_identifier: ID
        - comparison_operator:
          - raw_comparison_operator: <
          - raw_comparison_operator: '>'
        - numeric_literal: '5'
- statement_terminator: ;
- statement:
    delete_statement:
      keyword: DEL
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: MY_TABLE
      where_clause:
        keyword: WHERE
        expression:
        - numeric_literal: '1'
        - comparison_operator:
            raw_comparison_operator: '='
        - numeric_literal: '1'
- statement_terminator: ;
- statement:
    delete_statement:
      keyword: DEL
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: MY_TABLE
      where_clause:
        keyword: WHERE
        expression:
          column_reference:
            naked_identifier: MY_COL
          comparison_operator:
            raw_comparison_operator: '>'
          numeric_literal: '10'
- statement_terminator: ;
- statement:
    delete_statement:
      keyword: DEL
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: MY_TABLE
      where_clause:
        keyword: WHERE
        expression:
        - column_reference:
            naked_identifier: ID
        - keyword: IN
        - bracketed:
            start_bracket: (
            select_statement:
              select_clause:
                keyword: SELECT
                select_clause_element:
                  column_reference:
                    naked_identifier: ID
              from_clause:
                keyword: FROM
                from_expression:
                  from_expression_element:
                    table_expression:
                      table_reference:
                        naked_identifier: ANOTHER_TABLE
            end_bracket: )
        - binary_operator: AND
        - column_reference:
            naked_identifier: ID
        - comparison_operator:
          - raw_comparison_operator: <
          - raw_comparison_operator: '>'
        - numeric_literal: '5'
- statement_terminator: ;
