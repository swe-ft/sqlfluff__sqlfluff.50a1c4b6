# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 3f981faab492b7ca775ff380b8065518d427006901ffe9e4cddee3ff0a74a118
file:
- statement:
    create_materialized_view_statement:
    - keyword: CREATE
    - keyword: MATERIALIZED
    - keyword: VIEW
    - keyword: IF
    - keyword: NOT
    - keyword: EXISTS
    - table_reference:
      - naked_identifier: db
      - dot: .
      - naked_identifier: table_mv
    - keyword: TO
    - table_reference:
      - naked_identifier: db
      - dot: .
      - naked_identifier: table
    - keyword: AS
    - select_statement:
        select_clause:
        - keyword: SELECT
        - select_clause_element:
            column_reference:
              naked_identifier: column1
        - comma: ','
        - select_clause_element:
            column_reference:
              naked_identifier: column2
        from_clause:
          keyword: FROM
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                - naked_identifier: db
                - dot: .
                - naked_identifier: table_kafka
- statement_terminator: ;
- statement:
    create_materialized_view_statement:
    - keyword: CREATE
    - keyword: MATERIALIZED
    - keyword: VIEW
    - table_reference:
        naked_identifier: table_mv
    - keyword: TO
    - table_reference:
        naked_identifier: table
    - keyword: AS
    - select_statement:
        select_clause:
        - keyword: SELECT
        - select_clause_element:
            column_reference:
              naked_identifier: column1
        - comma: ','
        - select_clause_element:
            column_reference:
              naked_identifier: column2
        from_clause:
          keyword: FROM
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                  naked_identifier: table_kafka
- statement_terminator: ;
- statement:
    create_materialized_view_statement:
    - keyword: CREATE
    - keyword: MATERIALIZED
    - keyword: VIEW
    - keyword: IF
    - keyword: NOT
    - keyword: EXISTS
    - table_reference:
      - naked_identifier: db
      - dot: .
      - naked_identifier: table_mv
    - on_cluster_clause:
      - keyword: 'ON'
      - keyword: CLUSTER
      - naked_identifier: mycluster
    - keyword: TO
    - table_reference:
      - naked_identifier: db
      - dot: .
      - naked_identifier: table
    - keyword: AS
    - select_statement:
        select_clause:
        - keyword: SELECT
        - select_clause_element:
            column_reference:
              naked_identifier: column1
        - comma: ','
        - select_clause_element:
            column_reference:
              naked_identifier: column2
        from_clause:
          keyword: FROM
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                - naked_identifier: db
                - dot: .
                - naked_identifier: table_kafka
- statement_terminator: ;
- statement:
    create_materialized_view_statement:
    - keyword: CREATE
    - keyword: MATERIALIZED
    - keyword: VIEW
    - table_reference:
        naked_identifier: table_mv
    - keyword: TO
    - table_reference:
        naked_identifier: table
    - engine:
        keyword: ENGINE
        comparison_operator:
          raw_comparison_operator: '='
        table_engine_function:
          function_name:
            function_name_identifier: MergeTree
          function_contents:
            bracketed:
              start_bracket: (
              end_bracket: )
    - keyword: AS
    - select_statement:
        select_clause:
        - keyword: SELECT
        - select_clause_element:
            column_reference:
              naked_identifier: column1
        - comma: ','
        - select_clause_element:
            column_reference:
              naked_identifier: column2
        from_clause:
          keyword: FROM
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                  naked_identifier: table_kafka
- statement_terminator: ;
- statement:
    create_materialized_view_statement:
    - keyword: CREATE
    - keyword: MATERIALIZED
    - keyword: VIEW
    - table_reference:
        naked_identifier: table_mv
    - engine:
        keyword: ENGINE
        comparison_operator:
          raw_comparison_operator: '='
        table_engine_function:
          function_name:
            function_name_identifier: MergeTree
          function_contents:
            bracketed:
              start_bracket: (
              end_bracket: )
    - keyword: AS
    - select_statement:
        select_clause:
        - keyword: SELECT
        - select_clause_element:
            column_reference:
              naked_identifier: column1
        - comma: ','
        - select_clause_element:
            column_reference:
              naked_identifier: column2
        from_clause:
          keyword: FROM
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                  naked_identifier: table_kafka
- statement_terminator: ;
- statement:
    create_materialized_view_statement:
    - keyword: CREATE
    - keyword: MATERIALIZED
    - keyword: VIEW
    - table_reference:
        naked_identifier: table_mv
    - engine:
        keyword: ENGINE
        comparison_operator:
          raw_comparison_operator: '='
        table_engine_function:
          function_name:
            function_name_identifier: MergeTree
          function_contents:
            bracketed:
              start_bracket: (
              end_bracket: )
    - keyword: POPULATE
    - keyword: AS
    - select_statement:
        select_clause:
        - keyword: SELECT
        - select_clause_element:
            column_reference:
              naked_identifier: column1
        - comma: ','
        - select_clause_element:
            column_reference:
              naked_identifier: column2
        from_clause:
          keyword: FROM
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                  naked_identifier: table_kafka
- statement_terminator: ;
- statement:
    create_materialized_view_statement:
    - keyword: CREATE
    - keyword: MATERIALIZED
    - keyword: VIEW
    - table_reference:
      - naked_identifier: db
      - dot: .
      - naked_identifier: mv_table
    - engine:
        keyword: ENGINE
        table_engine_function:
          function_name:
            function_name_identifier: MergeTree
        merge_tree_order_by_clause:
        - keyword: ORDER
        - keyword: BY
        - bracketed:
            start_bracket: (
            end_bracket: )
    - keyword: AS
    - select_statement:
        select_clause:
          keyword: SELECT
          select_clause_element:
            wildcard_expression:
              wildcard_identifier:
                star: '*'
        from_clause:
          keyword: FROM
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                - naked_identifier: db
                - dot: .
                - naked_identifier: table
- statement_terminator: ;
